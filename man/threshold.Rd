% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{threshold}
\alias{threshold}
\title{Strict thresholding for weighted graphs in \code{.ncol} format}
\usage{
threshold(
  infile,
  outfile,
  method = "absolute",
  thresh = 0,
  local_global_alpha = 0,
  rank = 0L,
  overwrite = FALSE
)
}
\arguments{
\item{infile}{string. The input \code{.ncol} graph file to be thresholded.}

\item{outfile}{string. The path of the output file where the thresholded grpah will be written to.}

\item{method}{string. The method of thresholding can be one of these options:
\enumerate{
    \item \strong{\code{"absolute"}}: Retains all edges that are  greater than or equal to the 
           absolute value of the threshold value. (\code{weight} >= | \code{thresh} |)
    \item \strong{\code{"strict"}}: Retains edges that are strictly greater than \code{thresh} if
          \code{thresh} >= \code{0}.  If \code{thresh} < \code{0}, all negative edges less than
          \code{thresh} are retained.
    \item \strong{\code{"local-global"}}: Local the global pruning method mentioned in the thresholding papers
    \item \strong{\code{"rank"}}: Use the top ranked edges per vertex to threshold graph.
    }}

\item{thresh}{numeric. The value to threshold the graph. The affect of this value depends on the thresolding
\code{method} used, which are described above. \strong{Only used in the \code{"strict"} and 
\code{"absolute"} thresholding methods.}}

\item{local_global_alpha}{numeric. Use local-global method to threshold with alpha = \code{local_global_alpha}. 
\strong{Only used with \code{method == "local-global".}}}

\item{rank}{numeric. Use top \code{rank} ranked edges per vertex to threshold graph. \strong{Only used when
\code{method} == "\code{rank}".}}

\item{overwrite}{boolean. A  parameter meant to prevent overwriting existing thresholded
graph files. The default (\code{FALSE}) will display a menu to the user if the passed
\code{outfile} already exists. Choosing \code{TRUE} will bypass this menu and overwrite
the existing file without interruption from a workflow.}
}
\value{
Nothing. The thresholded graph is written to the file specified by outfile.
}
\description{
General graph thresholding function that reads in an \code{.ncol} graph file and writes
the thresholded graph to the file specified by \code{outfile}. The methods for thresholding
are presented in the comparative study paper linked here: \url{https://pubmed.ncbi.nlm.nih.gov/38781420/}
or in Carissa Bleker's dissertation: \url{https://trace.tennessee.edu/utk_graddiss/5894/}
}
\examples{
# Load the package
library(thresholding)

################ Example 1 ###################
infile <- system.file('extdata', 'HumanCellCycleSubset.ncol', package = "thresholding")
thresholding::threshold(infile, 
                        outfile = "./HCCS-thresh-abs.ncol",
                        method = "absolute",
                        thresh = 0.8,
                        overwrite = TRUE
                        )
print("Check the path specified by 'outfile' to find the output containing the thresholded graph.")
\dontrun{
################ Example 2 ###################
infile <- system.file('extdata', 'HumanCellCycleSubset.ncol', package = "thresholding") 
thresholding::threshold(infile, 
                        outfile = "./HCCS-thresh-strict.ncol",
                        method = "strict",
                        thresh = 0.8
                        )
################ Example 3 ###################
infile <- system.file('extdata', 'HumanCellCycleSubset.ncol', package = "thresholding") 
thresholding::threshold(infile, 
                        outfile = "./HCCS-thresh-local-global.ncol",
                        method = "local-global",
                        local_global_alpha = 0.5
                        )
################ Example 4 ###################
infile <- system.file('extdata', 'HumanCellCycleSubset.ncol', package = "thresholding") 
thresholding::threshold(infile, 
                        outfile = "./HCCS-thresh-strict.ncol",
                        method = "rank",
                        rank = 2
                        )
}
}
